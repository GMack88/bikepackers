{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/RacingResume.js","components/dashboard/FavoriteRoutes.js","components/dashboard/DashboardActions.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddFavoriteRoutes.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileFavoriteRoutes.js","components/profile/ProfileRacingResume.js","components/profile/ProfileAbout.js","components/profile/ProfileTop.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/profile-forms/AddRacingResume.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","alerts","alert","length","map","key","src","spinner","style","width","margin","display","alt","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteRacingResume","delete","racingResume","races","race","_id","eventDistance","location","deleteFavoriteRoutes","favoriteRoutes","favs","fav","routeName","difficultyRating","DashboardActions","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","bio","stravaurl","twitter","facebook","youtube","instagram","displaySocialInputs","toggleSocialInputs","social","addFavoriteRoutes","put","distance","link","ProfileItem","avatar","getProfiles","profiles","ProfileFavoriteRoutes","ProfileRacingResume","eventName","date","description","ProfileAbout","trim","split","ProfileTop","rel","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","showActions","format","defaultProps","addPost","setText","cols","rows","getPosts","posts","addComment","postId","deleteComment","commentId","comment","class","btn-danger","getPost","addRacingResume","Component","component","rest","render","props","initialState","getItem","combineReducers","action","cpy","slice","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddRacingResume","AddFavoriteRoutes","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b95bb7cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.514bc3d6.gif\";","import uuid from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">Riders</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\" />{\" \"}\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href=\"#!\">\r\n          <i className=\"fas fa-sign-out-alt\" />{\" \"}\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <a href=\"/profiles\">Riders</a>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fa fa-bicycle\"></i> Bikepackers.net\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Bikepackers.net</h1>\r\n          <p className=\"lead\">\r\n            Create a bikepacking profile/portfolio, share posts and get advice\r\n            from other bikepackers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { register } from \"../../actions/auth\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\"\r\n  });\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setAlert, register }\r\n)(Register);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Sign Into Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED\r\n} from \"./types\";\r\n\r\n// get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by id\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// create or update a profile\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//  add experience (racing resume)\r\nexport const addRacingResume = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.put(\"/api/profile/racingResume\", formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Race Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//  Add Favorite Routes\r\nexport const addFavoriteRoutes = (formData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    const res = await axios.put(\r\n      \"/api/profile/favoriteRoutes\",\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Favorite Routes Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete a resume item\r\nexport const deleteRacingResume = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/racingResume/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"Race Removed\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete favorite routes\r\nexport const deleteFavoriteRoutes = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/favoriteRoutes/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert(\"Favorite Routes Removed\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteRacingResume } from \"../../actions/profile\";\r\n\r\nconst RacingResume = ({ racingResume, deleteRacingResume }) => {\r\n  const races = racingResume.map(race => (\r\n    <tr key={race._id}>\r\n      <td>{race.eventDistance}</td>\r\n      <td className=\"hide-sm\">{race.location}</td>\r\n\r\n      <td>\r\n        <button\r\n          onClick={() => deleteRacingResume(race._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Racing Resume</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Event Distance</th>\r\n            <th className=\"hide-sm\">Event Name</th>\r\n            <th className=\"hide-sm\">Location</th>\r\n\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{races}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRacingResume.propTypes = {\r\n  racingResume: PropTypes.array.isRequired,\r\n  deleteRacingResume: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteRacingResume }\r\n)(RacingResume);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteFavoriteRoutes } from \"../../actions/profile\";\r\n\r\nconst FavoriteRoutes = ({ favoriteRoutes, deleteFavoriteRoutes }) => {\r\n  const favs = favoriteRoutes.map(fav => (\r\n    <tr key={fav._id}>\r\n      <td>{fav.routeName}</td>\r\n      <td className=\"hide-sm\">{fav.difficultyRating}</td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteFavoriteRoutes(fav._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Favorite Routes</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Route Name</th>\r\n            <th className=\"hide-sm\">Rating</th>\r\n            <th className=\"hide-sm\">Difficulty Rating</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{favs}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nFavoriteRoutes.propTypes = {\r\n  favoriteRoutes: PropTypes.array.isRequired,\r\n  deleteFavoriteRoutes: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteFavoriteRoutes }\r\n)(FavoriteRoutes);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-racing-resume\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-flag-checkered text-primary\"></i> Add Racing Resume\r\n      </Link>\r\n      <Link to=\"/add-favorite-routes\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-route text-primary\"></i> Add Favorite Routes\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport RacingResume from \"./RacingResume\";\r\nimport FavoriteRoutes from \"./FavoriteRoutes\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && !profile ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <RacingResume racingResume={profile.racingResume} />\r\n          <FavoriteRoutes favoriteRoutes={profile.favoriteRoutes} />\r\n          <div className=\",y-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\"> </i>Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>Please add your profile information</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getCurrentProfile, deleteAccount }\r\n)(Dashboard);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../actions/profile\";\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    website: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    stravaurl: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\"\r\n  });\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n  const {\r\n    website,\r\n    location,\r\n    bio,\r\n    stravaurl,\r\n    twitter,\r\n    facebook,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Tell us about yourself!\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\"></div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Can be your own website or your sponsor's\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (e.g. Boulder, CO)\r\n          </small>\r\n        </div>\r\n        <div></div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Strava Url\"\r\n            name=\"stravaurl\"\r\n            value={stravaurl}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">Your Strava.com Profile URL</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createProfile }\r\n)(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    website: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    stravaurl: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\"\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n    setFormData({\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      stravaurl: loading || !profile.stravaurl ? \"\" : profile.stravaurl,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    website,\r\n    location,\r\n    bio,\r\n    stravaurl,\r\n    twitter,\r\n    facebook,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Tell us about yourself!\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\"></div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Can be your own website or your sponsor's\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (e.g. Boulder, CO)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"stravaurl\"\r\n            name=\"stravaurl\"\r\n            value={stravaurl}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFavoriteRoutes } from \"../../actions/profile\";\r\n\r\nconst AddFavoriteRoutes = ({ addFavoriteRoutes, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    routeName: \"\",\r\n    distance: \"\",\r\n    difficultyRating: \"\",\r\n    link: \"\"\r\n  });\r\n\r\n  const { routeName, distance, difficultyRating, link } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Favorite Routes</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fa fa-compass\"></i> Add any bikepacking routes you know\r\n        and love.\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addFavoriteRoutes(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Route Name\"\r\n            name=\"routeName\"\r\n            value={routeName}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Distance\"\r\n            name=\"distance\"\r\n            value={distance}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Difficulty Rating\"\r\n            name=\"difficultyRating\"\r\n            value={difficultyRating}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Link\"\r\n            name=\"link\"\r\n            value={link}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"/dashboard\">\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddFavoriteRoutes.propTypes = {\r\n  addFavoriteRoutes: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addFavoriteRoutes }\r\n)(withRouter(AddFavoriteRoutes));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    website,\r\n    location,\r\n    stravaurl\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Bikeackers.net</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fas fa-users\" /> Browse and connect with fellow\r\n            bikepackers\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileFavoriteRoutes = ({\r\n  favoriteRoutes: { routeName, distance, link }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{routeName}</h3>\r\n    <p>{routeName}</p>\r\n    <p>\r\n      <strong>Route Distance: </strong>\r\n      {distance}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong>\r\n      {link}\r\n    </p>\r\n  </div>\r\n);\r\nProfileFavoriteRoutes.propTypes = {\r\n  favoriteRoutes: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProfileFavoriteRoutes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileRacingResume = ({\r\n  racingResume: { eventDistance, eventName, location, date, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{eventName}</h3>\r\n    <p>{date}</p>\r\n    <p>\r\n      <strong>Race distance: </strong>\r\n      {eventDistance}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong>\r\n      {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong>\r\n      {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileRacingResume.propTypes = {\r\n  racingResume: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileRacingResume;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    user: { name }\r\n  }\r\n}) => (\r\n  <div className=\"profile-about bg-light p-2\">\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className=\"line\"></div>\r\n      </Fragment>\r\n    )}\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">{location}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProfileFavoriteRoutes from \"./ProfileFavoriteRoutes\";\r\nimport ProfileRacingResume from \"./ProfileRacingResume\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back to Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-rr bg-white p-2\">\r\n              <h2 className=\"text-primary\">Racing Resume</h2>\r\n              {profile.racingResume.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.racingResume.map(racingResume => (\r\n                    <ProfileRacingResume\r\n                      key={racingResume._id}\r\n                      racingResume={racingResume}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Racing history</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-fav bg-white p-2\">\r\n              <h2 className=\"text-primary\">Favorite Routes</h2>\r\n              {profile.favoriteRoutes.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.favoriteRoutes.map(favoriteRoutes => (\r\n                    <ProfileFavoriteRoutes\r\n                      key={favoriteRoutes._id}\r\n                      favoriteRoutes={favoriteRoutes}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Added Routes</h4>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfileById }\r\n)(Profile);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"MM/DD/YYYY\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-up\" />{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-down\" />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addLike, removeLike, deletePost }\r\n)(PostItem);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  GET_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"./types\";\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// add like\r\nexport const addLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// remove like\r\nexport const removeLike = id => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// delete post\r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    });\r\n    dispatch(setAlert(\"Post Removed\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/posts\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n// Add comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment removed\", \"success\"));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status }\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Say Something</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addPost }\r\n)(PostForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the Bikepackers community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPosts }\r\n)(Posts);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div class=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class=\"my-1\">{text}</p>\r\n      <p class=\"post-date\">\r\n        Posted on <Moment format=\"MM/DD/YYYY\">{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={e => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          btn-danger\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteComment }\r\n)(CommentItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\nimport CommentItem from \"../post/CommentItem\";\r\nimport { getPost } from \"../../actions/post\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map(comment => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getPost }\r\n)(Post);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRacingResume } from \"../../actions/profile\";\r\n\r\nconst AddRacingResume = ({ addRacingResume, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    eventDistance: \"\",\r\n    eventName: \"\",\r\n    location: \"\",\r\n    date: \"\",\r\n    description: \"\"\r\n  });\r\n\r\n  // const [toDateDisabled, toggleDisabled] = useState(false);\r\n  const { eventDistance, eventName, location, date, description } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Racing Resume</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fa fa-file-text-o\"></i> Add some of your accomplishments\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addRacingResume(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Event Distance\"\r\n            name=\"eventDistance\"\r\n            value={eventDistance}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Event Name\"\r\n            name=\"eventName\"\r\n            value={eventName}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Date\"\r\n            name=\"date\"\r\n            value={date}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"/dashboard\">\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddRacingResume.propTypes = {\r\n  addRacingResume: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addRacingResume }\r\n)(withRouter(AddRacingResume));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      const cpy = state.slice();\r\n      cpy.push(payload);\r\n      return cpy;\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            comment => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\r\nimport EditProfile from \"./components/profile-forms/EditProfile\";\r\nimport AddFavoriteRoutes from \"./components/profile-forms/AddFavoriteRoutes\";\r\nimport Profiles from \"./components/profiles/Profiles\";\r\nimport Profile from \"./components/profile/Profile\";\r\nimport Posts from \"./components/posts/Posts\";\r\nimport Post from \"./components/post/Post\";\r\nimport AddRacingResume from \"./components/profile-forms/AddRacingResume\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\nimport \"./App.css\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  // Like using componentDidMount ^\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <section className=\"container\">\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/profiles\" component={Profiles} />\r\n              <Route exact path=\"/profile/:id\" component={Profile} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/create-profile\"\r\n                component={CreateProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/edit-profile\"\r\n                component={EditProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/add-racing-resume\"\r\n                component={AddRacingResume}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/add-favorite-routes\"\r\n                component={AddFavoriteRoutes}\r\n              />\r\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\r\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}